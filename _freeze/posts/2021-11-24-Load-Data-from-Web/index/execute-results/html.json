{
  "hash": "e9ebd7c316122035d17d5fda3dae40dd",
  "result": {
    "markdown": "---\ntitle: \"Load Data From web\"\nauthor: \"Sith Jaisong\"\ndate: '2021-11-23'\ncategories: [R]\ndraft: TRUE\n---\n\n\n# เกริ่น\n\nข้อมูลต่าง ๆ บางที เราสามารถดึงจากเวปต่าง ๆ ได้ ซึ่งอาจจะมีกา่รเผยแพร่สาธารณะให้สามารถนำดึงมาใช้ประโยชน์ได้ โดยเฉพาะ open data ของไทยด้านการเกษตร สามารถเข้าเวปของ [ศูนย์ข้อมูลเกษตรแห่งชาติ](https://www.nabc.go.th/) อยากเชิญชวนให้ลองเข้าไปใช้ หรือ ทดลองเล่นกับข้อมูล ซึ่งเราสามารถเอาข้อมูลมาเล่น\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the \u001b]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001b]8;;\u0007 to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(knitr)\nlibrary(patchwork)\nlibrary(ggthemes)\nlibrary(rmarkdown)\ntheme_set(theme_few())\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\noptions(digits = 3)\n```\n:::\n\n\n# ตัวอย่างการดึงข้อมูลไฟล์ xlsx หรือ xls file จากเวป\n\nลองดึงข้อมูล [ข้อมูลปริมาณการผลิตข้าว ปี 2564](http://dataset.nabc.go.th/dataset/oae11_04)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rio)\n#Right now readxl reads only from xlsx and xls files\n\nxlsx_url <- \"https://data.go.th/dataset/d2c00d96-e8ea-47d6-9eb1-8c5955b2f836/resource/8bd9f92d-3554-4814-9b56-15c244dbf947/download/technical.xlsx\"\n\nrice_2564 <- rio::import(file = xlsx_url)\nglimpse(rice_2564)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 3\nColumns: 10\n$ Field_Name     <chr> \"YEAR\", \"SOCIO_TYPE\", \"VAL\"\n$ Data_Type      <chr> \"text\", \"text\", \"numeric\"\n$ Length         <dbl> 4, 100, 20\n$ Default        <lgl> NA, NA, NA\n$ Mandatory      <chr> \"M\", \"M\", \"O\"\n$ Primary        <chr> \"No\", \"No\", \"No\"\n$ Auto_Increment <chr> \"No\", \"No\", \"No\"\n$ Comment        <chr> \"ปีเพาะปลูก\", \"รายการ\", \"ข้อมูล(บาท/ครัวเรือน)\"\n$ Scope          <chr> \"N/A\", \"N/A\", \"N/A\"\n$ Type           <chr> \"N/A\", \"N/A\", \"N/A\"\n```\n:::\n:::\n\n\nจะเห็นว่าโครงสร้างของข้อมูลอาจจะยังไม่พร้อมที่จะนำไปใช้วิเคราะห์ได้ทันที เราจึงต้องมาทำการ Data Wrangling เสียก่อน\n\n# ตัวอย่างการดึงข้อมูลไฟล์ csv file\n\nลองดึงข้อมูล [ราคาที่เกษตรกรขายได้ที่ไร่นา](http://dataset.nabc.go.th/dataset/oae0010/resource/9599c763-8188-4d1d-a736-31c8dd4962d7)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\n\ncsv_url <- \"https://data.go.th/dataset/9fba4c0b-2e78-4e87-897a-465f885d7e79/resource/7ea1669e-fb57-4b3f-aca1-0643ba9bb3f3/download/4cdzc1561119917.csv\"\n\nland_use <- readr::read_csv(file = csv_url, col_types = \"ccddd\")\nglimpse(land_use)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 410\nColumns: 4\n$ PROVINCE_N <chr> \"ระดับประเทศ\", \"ภาคเหนือ\", \"ภาคตะวันออกเฉียงเหนือ\", \"ภาคกลาง\", \"…\n$ VALUE      <chr> \"36932124.96\", \"4008690.13\", \"5902799.93\", \"7416142.11\", \"1…\n$ NAME       <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ YEAR       <dbl> 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560,…\n```\n:::\n:::\n\n\n# ตัวอย่างการดึงข้อมูลไฟล์ตารางจาก wiki\n\nให้ดูตัวอย่างการดึงตารางจาก [List of districts of Thailand](https://en.wikipedia.org/wiki/List_of_districts_of_Thailand)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### load table from wiki ####\nlibrary(rvest)\n\ndoc <- read_html(\"https://en.wikipedia.org/wiki/List_of_districts_of_Thailand\")\n\ntable <- html_node(doc, \".wikitable\")\n\nmy.table <- html_table(table, fill = TRUE)\n```\n:::\n\n\n# ตัวอย่างการดึงข้อมูลไฟล์ JSON จากเวป\n\nto be continue\n\n# ตัวอย่างการดึงข้อมูลไฟล์ api จากเวป\n\nto be continue\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}