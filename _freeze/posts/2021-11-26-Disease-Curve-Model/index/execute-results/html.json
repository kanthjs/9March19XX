{
  "hash": "80af876cd728cd4998dd4063ef3660e8",
  "result": {
    "markdown": "---\ntitle: \"epifitter for Plant Disease Curve Model\"\nauthor: \"Sith Jaisong\"\ndate: '2021-11-26'\ncategories: [R, PDE]\ndraft: TRUE\n---\n\n\n# เกริ่น\n\nการศึกษาด้านการระบาดวิทยาโรคพืช มักจะศึกษากันด้านแบบจำลอง และถือว่าเป็นเรื่องที่ค่อนข้างจะยาก ที่จะทำความเข้าใจ แต่การศึกษาแบบจำลองหรือโมเดลนั้น เพื่อพยายามหาอะไรบางอย่างมาเพื่ออธิบายปรากฎการณ์ทางธรรมชาติ และเมื่อลองคิดดูแล้ว การหาแบบจำลองมาอธิบาย ดูแล้วน่าจะอธิบายได้ ดี อีกทั้งแบบจำลองที่ได้ นอกจากจะอธิบายสิ่งที่เกิดขึ้นกับข้อมูลในอดีตหรือข้อมูลที่เก็บได้ หรือ ทดลองได้ ยังสามารถนำแบบจำลองเหล่านั้น มาคาดการณ์ เหตุการณ์การระบาดที่ถ้าจะเกิดขึ้นในอนาคตได้ จึงเห็นได้ว่า การศึกษาแบบจำลองการระบาด จึงอาจจะเป็นหัวใจของการศึกษาการระบาด ตั้งแต่อดีตจนถึงปัจจุบัน\n\nในด้านโรคพืชวิทยา เรามักสนใจที่จะศึกษาการพัฒนาของโรคเมื่อเวลาผ่านไป โดยที่เวลา (t) ถูกจำลองเป็นตัวแปรต่อเนื่องมากกว่าที่จะเป็นตัวแปรที่ไม่ต่อเนื่อง แบบจำลองจำนวนมากถูกนำมาใช้เพื่อสร้างแบบจำลองการพัฒนาของโรคเมื่อเวลาผ่านไป จะแสดงให้ดู มี ดังนี้\n\nสมการแบบจำลองการเกิดโรคสามารถ ดูได้จาก [Examples of growth models for plant disease progress](https://www.apsnet.org/edcenter/disimpactmngmnt/topc/EcologyAndEpidemiologyInR/DiseaseProgress/Pages/GrowthModels.aspx)\n\n![](https://github.com/jaisong-sith/academic-website/blob/main/content/post/2021-11-26-Disease-Curve-Model/DPC_model.png?raw=true)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the \u001b]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001b]8;;\u0007 to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(knitr)\nlibrary(patchwork)\nlibrary(ggthemes)\nlibrary(rmarkdown)\nlibrary(cowplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'cowplot'\n\nThe following object is masked from 'package:ggthemes':\n\n    theme_map\n\nThe following object is masked from 'package:patchwork':\n\n    align_plots\n\nThe following object is masked from 'package:lubridate':\n\n    stamp\n```\n:::\n\n```{.r .cell-code}\ntheme_set(theme_few())\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\noptions(digits = 3)\n```\n:::\n\n\n\n\nเปิดใช้ package `epifitter`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(epifitter)\nset.seed(2564)\n```\n:::\n\n\nเราจะใช้ functions `sim_` จาก package `epifitter` เพื่อ จำลองข้อมูลจากโมเดลแบบต่าง เพื่อมาศึกษา โดยมี 6 ค่าที่เราจะลองปรับ ดู\nThe sim_ functions, regardless of the model, require the same set of six arguments. By default, at least two arguments are required (the others have default values)\n\n - `r`: อัตราการเกิดโรค (apparent infection rate)\n - `n`: จำนวนซ้ำ (number of replicates)\n - `N`: เวลาทั้งหมดตลอดช่วงเวลาการระบาด (epidemic duration in time units)\n - `dt`: ระยะช่วงเวลาระหว่างการประเมินความรุนแรงของโรค (time (fixed) in units between two assessments)\n - `y0`: การระบาดเริ่มต้น (initial inoculum)\n - `alpha`: ค่าความแกว่งของข้อมูลระหว่างซ้ำ (noise parameters for the replicates)\n\n เมื่อ `n` มีค่ามากกว่า 1 โรคระบาดที่เกิดซ้ำ (เช่น การรักษาซ้ำ) จะเกิดขึ้น และ ควรมีการตั้งค่า `alpha` การแกว่งของข้อมูล (ความคลาดเคลื่อนฝนการประเมินของการทดลอง) กำหนดค่าแล้ว คำนวนออกมาให้ ค่า random_y ซึ่งจะแปรผันแบบสุ่มตามจำนวนซ้ำที่กำหนดไว้\n\n# Monomolecular model\n\nMonomolecular model สมมติความสามารถในการรองรับของหนึ่ง นั่นคือ ระดับสูงสุดของการเกิดโรคคือ 1 ดังนั้น วัดความรุนแรงหรืออุบัติการณ์ของโรคเป็นสัดส่วนของโรค อยู่ระหว่าง 0 (ไม่เป็นโรค) และ 1 (เป็นโรคทั้งหมด) นอกจากนี้ อัตราการเปลี่ยนแปลงสัมบูรณ์เป็นสัดส่วนกับ เนื้อเยื่อที่มีสุขภาพดี เช่น (1-y)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmono_model <- sim_monomolecular(\n  N = 100,\n  y0 = 0.01,\n  dt = 5,\n  r = 0.05,\n  alpha = 0.2,\n  n = 7\n)\nhead(mono_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  replicates time     y random_y\n1          1    0 0.010    0.010\n2          1    5 0.229    0.204\n3          1   10 0.400    0.345\n4          1   15 0.532    0.535\n5          1   20 0.636    0.583\n6          1   25 0.716    0.634\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmono_plot = mono_model %>%\n  ggplot(aes(time, y)) +\n  geom_jitter(aes(time, random_y), size = 3, color = \"gray\", width = .1) +\n  geom_line(size = 1) +\n  theme_minimal_hgrid() +\n  labs(\n    title = \"Monomolecular\",\n    y = \"Disease intensity\",\n    x = \"Time\"\n  )\nmono_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n# Exponential model\n\nแบบจำลองเลขชี้กำลังถือว่าอัตราสัมบูรณ์ของโรคเพิ่มขึ้น (*dy/dt*) เป็นสัดส่วนกับความรุนแรงของโรค\n\n::: {.cell}\n\n```{.r .cell-code}\nexp_model <- sim_exponential(\n  N = 100,    # total time units\n  y0 = 0.01,  # initial inoculum\n  dt = 10,    #  interval between assessments in time units\n  r = 0.045,  #  apparent infection rate\n  alpha = 0.2,# level of noise\n  n = 7       # number of replicates\n)\nhead(exp_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  replicates time      y random_y\n1          1    0 0.0100   0.0146\n2          1   10 0.0157   0.0126\n3          1   20 0.0246   0.0223\n4          1   30 0.0386   0.0395\n5          1   40 0.0605   0.0524\n6          1   50 0.0949   0.0797\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nexp_plot = exp_model %>%\n  ggplot(aes(time, y)) +\n  geom_jitter(aes(time, random_y),\n              size = 3,\n              color = \"gray\",\n              width = .1) +\n  geom_line(size = 1) +\n  theme_minimal_hgrid() +\n  ylim(0, 1) +\n  labs(title = \"Exponential\",\n       y = \"Disease intensity\",\n       x = \"Time\")\nexp_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n# Logistic model\n\nLogistic model ถือว่าอัตราแน่นอนของการเปลี่ยนแปลงในระดับโรคขึ้นอยู่กับทั้งเนื้อเยื่อที่มีสุขภาพดี (y) และเนื้อเยื่อที่เป็นโรค (1-y) ที่มีอยู่ในขณะนั้น เส้นโค้งมีความสมมาตรอย่างสมบูรณ์โดยมีจุดเปลี่ยนเว้าที่ t = 1/rln y0/(1- y0) เมื่อ y = 1/2 นั่นคือ dy/dt เพิ่มขึ้นจนถึง y = 1/2 และลดลงหลังจากนั้น\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlogist_model <- sim_logistic(\n  N = 100,\n  y0 = 0.01,\n  dt = 5,\n  r = 0.1,\n  alpha = 0.2,\n  n = 7\n)\nhead(logist_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  replicates time      y random_y\n1          1    0 0.0100   0.0100\n2          1    5 0.0164   0.0159\n3          1   10 0.0267   0.0149\n4          1   15 0.0433   0.0482\n5          1   20 0.0695   0.0672\n6          1   25 0.1096   0.0848\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlogist_plot = logist_model %>%\n  ggplot(aes(time, y)) +\n  geom_jitter(aes(time, random_y), size = 3,color = \"gray\", width = .1) +\n  geom_line(size = 1) +\n  theme_minimal_hgrid() +\n  labs(\n    title = \"Logistic\",\n    y = \"Disease intensity\",\n    x = \"Time\"\n  )\nlogist_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n# Gompertz model\n\nโมเดล Gompertz ถือว่าอัตราการเปลี่ยนแปลงแบบสัมบูรณ์ขึ้นอยู่กับ y และ ln(1/y) และคล้ายกับแบบจำลองด้านลอจิสติกส์มาก อย่างไรก็ตาม โมเดล Gompertz มีความสมมาตรมากกว่า โดยมีจุดเปลี่ยนเว้าอยู่ที่ 0.37(1/e) แทน\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngomp_model <- sim_gompertz(\n  N = 100,\n  y0 = 0.01,\n  dt = 5,\n  r = 0.07,\n  alpha = 0.2,\n  n = 7\n)\nhead(gomp_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  replicates time     y random_y\n1          1    0 0.010   0.0100\n2          1    5 0.039   0.0497\n3          1   10 0.102   0.0991\n4          1   15 0.200   0.2337\n5          1   20 0.321   0.2900\n6          1   25 0.449   0.4443\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngomp_plot = gomp_model %>%\n  ggplot(aes(time, y)) +\n  geom_jitter(aes(time, random_y), size = 3,color = \"gray\", width = .1) +\n  geom_line(size = 1) +\n  theme_minimal_hgrid() +\n  labs(\n    title = \"Gompertz\",\n    y = \"Disease intensity\",\n    x = \"Time\"\n  )\ngomp_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(exp_plot + mono_plot)/(logist_plot + gomp_plot)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nการที่จะพิจารณาว่า model บทความต่อไป จะลงในรายละเอียดเรื่องการประเมินว่าแบบจำลองไหนเหมาะสมกับข้อมูลของเรามากที่สุด\n\n\nสามารถดู [reference](https://alvesks.github.io/epifitter/articles/simulation.html)\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}