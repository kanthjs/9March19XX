{
  "hash": "bec647c60d06bd117e28705a5c6db1fc",
  "result": {
    "markdown": "---\ntitle: \"Homogeneity test in R\"\ndate: '2021-10-01'\ncategories: [R, ANOVA]\n---\n\n\n## ทำไมต้องวิเคราะห์\n\nก่อนที่เราจะทำการวิเคราะห์ ANOVA เราจะต้องตรวจ ว่า assumption ของ ANOVA นั้น ผ่านหรือไม่ เมื่อเราต้องการเปรียบเทียบ กลุ่มตัวอย่าง 2 กลุ่ม หรือ มากกว่า ว่ามีค่าเฉลี่ยแตกต่างกันหรือไม่ทางสถิติ (ผมไม่ได้เป็นนักสถิติจริงจัง ผมเอาแค่ใช้งาน ดังนั้นต่อไปนี้อ่านไว้เฉยๆ อย่าไปอางอิงอะไรนะครับ)\n\nความแปรปรวนต้องไม่แตกต่างกันอย่างมีนัยทางสถิติ นั้นก็คือ ไอ้เขาสองลูกนี้ ควรจะไม่แตกต่างกันมากนัก ถึงจะเอามาเปรียบเทียบกันได้ จริงไหม แล้วจะรู้ได้อย่างไร สมมุติ มี การทดลอง ชื่อ F10 กับ F50 วัดผลออกมาดังนี้ ผมเอาตัวอย่างข้อมูลจากหนังสือชื่อ สถิติ:การวางแผนการทดลองและการวิเคราะห์ข้อมูลในงานวิจัยด้านพืชด้วย R ของ ชูศักดิ์ จอมพุก\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nF10 <- c(605, 583, 592, 602, 587, 595, 615, 612, 606)\nF50 <- c(779, 780, 797, 779, 778, 801, 785, 779, 771)\ntest_data <- data.frame(F10, F50)\n```\n:::\n\n\nแล้วจะได้รูปแบบของข้อมูลแบบนี้มา\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n| F10| F50|\n|---:|---:|\n| 605| 779|\n| 583| 780|\n| 592| 797|\n| 602| 779|\n| 587| 778|\n| 595| 801|\n| 615| 785|\n| 612| 779|\n| 606| 771|\n\n</div>\n:::\n:::\n\n\nบอกเลยว่า มันไม่ใช่โครงสร้างที่เราจะเหมาะจะมาวิเคราะห์ เลย หรือเอามาทำอะไรต่อ วิธีการ โดยการขอใช้ `gather()` จาก `tidyverse` package\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ntidy_data <- test_data %>% gather(key = \"trt\", value = \"yield\")\ntidy_data\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|trt | yield|\n|:---|-----:|\n|F10 |   605|\n|F10 |   583|\n|F10 |   592|\n|F10 |   602|\n|F10 |   587|\n|F10 |   595|\n|F10 |   615|\n|F10 |   612|\n|F10 |   606|\n|F50 |   779|\n|F50 |   780|\n|F50 |   797|\n|F50 |   779|\n|F50 |   778|\n|F50 |   801|\n|F50 |   785|\n|F50 |   779|\n|F50 |   771|\n\n</div>\n:::\n:::\n\n\nแบบนี้มันถึงจะไปต่อแล้วรู้เรื่องการเชคความแปรปรวนนั้นมีหลายวิธี\n\n### F-test\n\nทดสอบได้แค่ 2 กลุ่ม เท่านั้น\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar.test(yield ~ trt, data = tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tF test to compare two variances\n\ndata:  yield by trt\nF = 1, num df = 8, denom df = 8, p-value = 0.7\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.295 5.796\nsample estimates:\nratio of variances \n              1.31 \n```\n:::\n:::\n\n\n### Bartlett's test\n\nอันนี้ แนะนำ ถ้านึกอะไรไม่ออก ให้นึกถึงอันนี้เลย โดยทั่วไปก็ใช้อันนี้กัน\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbartlett.test(yield ~ trt, data = tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tBartlett test of homogeneity of variances\n\ndata:  yield by trt\nBartlett's K-squared = 0.1, df = 1, p-value = 0.7\n```\n:::\n:::\n\n\nเห็นไหมว่าผลมันก็ใกล้เคียงกัน\n\n### Levene's test\n\nอันนี้ใช้ใน SPSS ใน R ก็จะมีใน `car` package\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(car)\nleveneTest(yield ~ trt, data = tidy_data)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|      | Df| F value| Pr(>F)|\n|:-----|--:|-------:|------:|\n|group |  1|   0.645|  0.434|\n|      | 16|      NA|     NA|\n\n</div>\n:::\n:::\n\n\n*p* มันจะต่างออก แต่ก็ไม่ต่างกันซะทีเดียว\n\n### Fligner-Killeen's test\n\nวิธีนี้ ค่อนข้างจะ robust กว่าวิธีอื่นๆ ถึงแม้ว่าจะมีการกระจายไม่ค่อยจะ normal เท่าไหร่\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfligner.test(yield ~ trt, data = tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tFligner-Killeen test of homogeneity of variances\n\ndata:  yield by trt\nFligner-Killeen:med chi-squared = 0.6, df = 1, p-value = 0.4\n```\n:::\n:::\n\n\nส่วนตัวไม่ติด ว่าจะใช้วิธีไหน แต่ขอให้บอกว่า ใช้อะไรทดสอบก็ พอ จำไว้ว่าถ้า Homogeneity of Variance ไม่ผ่านแล้ว assumption ของ parametric test ก็ไม่ผ่านเช่นกัน อาจจะต้องหันไปใช้วิธี Nonparametric test แทน\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}